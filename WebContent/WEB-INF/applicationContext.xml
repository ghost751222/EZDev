<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd 


	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:property-placeholder location="/WEB-INF/consilium.properties"/>

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <context:annotation-config/>
    <context:component-scan base-package="com.consilium"/>


    <!-- Data Source -->

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <property name="preferredTestQuery" value="${jdbc.preferredTestQuery}"/>
        <property name="testConnectionOnCheckout" value="${jdbc.testConnectionOnCheckout}"/>

<!--        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>-->
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- For SELECT -->
    <!-- @Transactional(propagation=Propagation.NOT_SUPPORTED,readOnly=true)  -->
    <!-- For Update -->
    <!-- @Transactional or @Transactional(rollbackFor=Exception.class)  to public method  -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="query*" propagation="NOT_SUPPORTED" read-only="true"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointCut" expression="execution(* com.consilium.dao..*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointCut" advice-ref="txAdvice"/>
    </aop:config>
    -->

    <!-- JDBC Template -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="namedParameterJdbcTemplate"
          class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <!-- Security Filter -->
    <bean id="securityFilter" class="com.consilium.web.SecurityFilter">
        <property name="loginPage" value="index.html"/>
    </bean>

    <!-- ##################################### -->
    <!--             Service Beans             -->
    <!-- ##################################### -->


    <!-- View Resolver for JSON View -->
    <bean name="viewResolver"
          class="org.springframework.web.servlet.view.XmlViewResolver"/>

    <bean name="statusError" class="org.springframework.web.servlet.view.json.error.HttpStatusError"/>
    <bean name="modelFlagError" class="org.springframework.web.servlet.view.json.error.ModelFlagError"/>

    <bean name="exceptionMessageExceptionHandler"
          class="org.springframework.web.servlet.view.json.exception.ExceptionMessageExceptionHandler">
        <property name="modelKey" value="message"/>
    </bean>
    <bean name="stackTraceExceptionHandler" class="com.consilium.view.StackTraceExceptionHandler"/>

    <bean name="exceptionResolver" class="org.springframework.web.servlet.view.json.exception.JsonExceptionResolver">
        <property name="exceptionView" value="jsonView"/>
        <property name="errorHandler">
            <list>
                <ref bean="statusError"/>
                <ref bean="modelFlagError"/>
            </list>
        </property>
        <property name="exceptionHandler">
            <list>
                <ref bean="exceptionMessageExceptionHandler"/>
                <ref bean="stackTraceExceptionHandler"/>
            </list>
        </property>
    </bean>

</beans>